{"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"snippetSupport":false}}},"workspace":{"applyEdit":true,"didChangeWatchedFiles":{"dynamicRegistration":true}}},"processId":25551,"rootPath":"/home/daniel/www/phpactor/language-server","rootUri":"file:///home/daniel/www/phpactor/language-server","trace":"off"},"id":93}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"php","text":"<?php\n\nnamespace Phpactor\\LanguageServer\\Core\\Reader;\n\nuse Phpactor\\LanguageServer\\Core\\IO;\nuse Phpactor\\LanguageServer\\Core\\Reader;\nuse Phpactor\\LanguageServer\\Core\\Transport\\Request;\n\nclass RecordingReader implements Reader\n{\n    /**\n     * @var Reader\n     */\n    private $innerReader;\n\n    /**\n     * @var bool\n     */\n    private $recordStream;\n\n    public function __construct(Reader $innerReader, string $recordPath)\n    {\n        $this->innerReader = $innerReader;\n        $this->recordStream = fopen($recordPath, 'w');\n    }\n\n    public function readRequest(IO $io): Request\n    {\n        $request = $this->innerReader->readRequest($io);\n        fwrite($this->recordStream, $request->body() . PHP_EOL);\n        return $request;\n    }\n\n    public function __destruct()\n    {\n        fclose($this->recordStream);\n    }\n}\n","uri":"file:///home/daniel/www/phpactor/language-server/lib/Core/Reader/RecordingReader.php","version":0}}}
